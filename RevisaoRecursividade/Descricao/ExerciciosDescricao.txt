1. Palíndromo
Crie um método recursivo que receba uma string como parâmetro e retorne true se essa for um palíndromo. A entrada do programa termina com a leitura de “FIM”. Na saída padrão, para cada linha de entrada, escreva uma linha de saída com SIM/NAO indicando se a entrada corresponde a um palíndromo ou não. Destaca-se que uma linha de entrada pode conter caracteres não-letras.

2. Conta ocorrências 
Implemente uma função recursiva, em Java, para procurar um determinado número inteiro em um vetor. Sua função deve receber como parâmetros um vetor A de inteiros, a quantidade n de elementos armazenados atualmente no vetor e o valor x, inteiro, a ser pesquisado. Como resultado, sua função deve retornar quantas vezes o elemento pesquisado x foi localizado no vetor A. A entrada padrão é composta por uma linha com diversos números inteiros separados pelo símbolo “;” e outra linha com o número a ser pesquisado no conjunto anterior. Esse padrão repete-se até ser encontrada a palavra “FIM”. A saída padrão deve indicar, para cada conjunto de números inteiros informado, o número de ocorrências do número pesquisado nesse conjunto de números inteiros lido. 

3. Álgebra booleana
Crie um método recursivo que receba uma string contendo uma expressão booleana e os valores de suas entradas e retorne um número inteiro indicando se a expressão é verdadeira ou falsa. Cada string da entrada padrão é composta por um número inteiro n, que indica o número de entradas da expressão booleana corrente. Em seguida, a string contém n valores binários (um para cada entrada) e a expressão booleana. Na saída padrão, para cada linha de entrada, escreva uma linha de saída com 1 ou 0, indicando se a expressão corrente é verdadeira ou falsa. 